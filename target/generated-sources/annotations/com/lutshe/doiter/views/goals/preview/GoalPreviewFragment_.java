//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package com.lutshe.doiter.views.goals.preview;

import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import com.lutshe.doiter.R.layout;
import com.lutshe.doiter.data.database.dao.GoalsDao_;
import com.lutshe.doiter.data.database.dao.MessagesDao_;
import com.lutshe.doiter.data.provider.stub.ImagesProviderStub_;
import com.lutshe.doiter.notifications.MessagesUpdateAlarmScheduler_;
import com.lutshe.doiter.views.util.FragmentsSwitcher_;

public final class GoalPreviewFragment_
    extends GoalPreviewFragment
{

    private View contentView_;

    private void init_(Bundle savedInstanceState) {
        injectFragmentArguments_();
        messagesUpdateAlarmScheduler = MessagesUpdateAlarmScheduler_.getInstance_(getActivity());
        imagesProvider = ImagesProviderStub_.getInstance_(getActivity());
        fragmentsSwitcher = FragmentsSwitcher_.getInstance_(getActivity());
        messagesDao = MessagesDao_.getInstance_(getActivity());
        goalsDao = GoalsDao_.getInstance_(getActivity());
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
    }

    private void afterSetContentView_() {
        goalCover = ((ImageView) findViewById(com.lutshe.doiter.R.id.goalCoverDetail));
        editEndTime = ((EditText) findViewById(com.lutshe.doiter.R.id.editEndTime));
        goalName = ((TextView) findViewById(com.lutshe.doiter.R.id.goalNameDetail));
        {
            View view = findViewById(com.lutshe.doiter.R.id.addGoalButton);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        GoalPreviewFragment_.this.addToUserGoals();
                    }

                }
                );
            }
        }
        ((MessagesUpdateAlarmScheduler_) messagesUpdateAlarmScheduler).afterSetContentView_();
        ((ImagesProviderStub_) imagesProvider).afterSetContentView_();
        ((FragmentsSwitcher_) fragmentsSwitcher).afterSetContentView_();
        ((MessagesDao_) messagesDao).afterSetContentView_();
        ((GoalsDao_) goalsDao).afterSetContentView_();
        bindData();
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(layout.goal_preview_fragment, container, false);
        }
        return contentView_;
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        afterSetContentView_();
    }

    public View findViewById(int id) {
        if (contentView_ == null) {
            return null;
        }
        return contentView_.findViewById(id);
    }

    public static GoalPreviewFragment_.FragmentBuilder_ builder() {
        return new GoalPreviewFragment_.FragmentBuilder_();
    }

    private void injectFragmentArguments_() {
        Bundle args_ = getArguments();
        if (args_!= null) {
            if (args_.containsKey("goalId")) {
                try {
                    goalId = ((Long) args_.getSerializable("goalId"));
                } catch (ClassCastException e) {
                    Log.e("GoalPreviewFragment_", "Could not cast argument to the expected type, the field is left to its default value", e);
                }
            }
        }
    }

    public static class FragmentBuilder_ {

        private Bundle args_;

        private FragmentBuilder_() {
            args_ = new Bundle();
        }

        public GoalPreviewFragment build() {
            GoalPreviewFragment_ fragment_ = new GoalPreviewFragment_();
            fragment_.setArguments(args_);
            return fragment_;
        }

        public GoalPreviewFragment_.FragmentBuilder_ goalId(Long goalId) {
            args_.putSerializable("goalId", goalId);
            return this;
        }

    }

}
